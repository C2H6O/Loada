apply plugin: 'com.android.library'
apply plugin: 'com.jfrog.bintray'
apply plugin: 'com.neenbedankt.android-apt'
apply plugin: 'com.github.dcendents.android-maven'

Properties versionProp = new Properties()
versionProp.load(project.rootProject.file("gradle.properties").newDataInputStream())

minorVersion = versionProp.getProperty("minorVersion")

// This is the library version used when deploying the artifact
version = new StringBuilder().append(versionProp.getProperty("version")).append(minorVersion).toString()
group = "net.doubov"                                        // Maven Group ID for the artifact
def repoName = 'Loada'
def siteUrl = 'https://github.com/C2H6O/' + repoName      // Homepage URL of the library
def gitUrl = siteUrl + '.git'   // Git repository URL


android {
    compileSdkVersion 22
    buildToolsVersion "22.0.1"
    resourcePrefix "loada_"

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 22
        versionCode 1
        versionName "1.0"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    packagingOptions {
        exclude 'META-INF/services/javax.annotation.processing.Processor'
    }
}

buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:1.2.3'
        classpath 'com.neenbedankt.gradle.plugins:android-apt:1.4'
        classpath 'com.github.dcendents:android-maven-plugin:1.2'
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.1'
    }
}

install {
    repositories.mavenInstaller {
        // This generates POM.xml with proper parameters
        pom {
            project {
                packaging 'aar'

                // Add your description here
                name 'Loada library for Android Apps'
                url siteUrl

                // Set your license
                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id 'doubov'
                        name 'Alexandre Doubov'
                        email 'alexandre.doubov@gmail.com'
                    }
                }
                scm {
                    connection gitUrl
                    developerConnection gitUrl
                    url siteUrl

                }
            }
        }
    }
}


task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    android.libraryVariants.all { variant ->
        task("generate${variant.name.capitalize()}JavaDoc", type: Javadoc) {
            description "Generates Javadoc for $variant.name."
            source = variant.javaCompile.source
            ext.androidJar = "${android.sdkDirectory}/platforms/${android.compileSdkVersion}/android.jar"
            classpath = files(variant.javaCompile.classpath.files) + files(ext.androidJar)
        }
    }
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

task findConventions << {
    println project.getConvention()
}
//
//Properties versionWrite = new Properties()
//versionWrite.store(project.rootProject.project("loada").file('bintray.properties').newDataOutputStream(), "version")

task increment << {
    versionProp.put("minorVersion", String.valueOf(++Integer.getInteger(minorVersion)))
    versionProp.store(project.rootProject.file('gradle.properties').newDataOutputStream(), "version comment")
}

increment.shouldRunAfter bintrayUpload

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

bintray {
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")

    configurations = ['archives']
    pkg {
        repo = "maven"
        name = repoName
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = ["Apache-2.0"]
        publish = true
    }
}


dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.android.support:appcompat-v7:22.1.1'
    // ButterKnife
    compile 'com.jakewharton:butterknife:6.1.0'
}
